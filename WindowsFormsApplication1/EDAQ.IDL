module EDAQ
{	
	struct Command
	{
		unsigned short bbg_id;
		unsigned short daq_id;
		unsigned short fc;
		string msg;
		boolean start;
	};	
	#pragma keylist Command bbg_id daq_id

	typedef sequence<unsigned short> data;
	struct ContinueData
	{		
		unsigned short bbg_id;
		unsigned short daq_id;
		unsigned short check_count;
		unsigned long read_count;
		double sample_rate;
		boolean is_32;
		data payload;
	};
	#pragma keylist ContinueData bbg_id daq_id
	
	typedef sequence<double> scaledata;
	struct ContinueScale
	{		
		unsigned short bbg_id;
		string sensorName;
		string dateTime;
		unsigned short check_count;
		unsigned long read_count;
		double sample_rate;
		scaledata payload;
	};
	#pragma keylist ContinueScale bbg_id sensorName
	
	struct SensorData
	{		
		unsigned short bbg_id;
		string sensorName;
		string dateTime;
		double value;
	};
	#pragma keylist SensorData bbg_id sensorName
};
module HB
{	
	struct Networking
	{
		unsigned short bbg_id;
		string ipv4;
		string mac;
	};	
	#pragma keylist Networking bbg_id
};